Veremos unos ejemplos de uso de las funciones col() y expr(). 
      * col('nombreCol') nos cogera los registros de la columna nombreCol,
      * expr('nombreCol'R x) relaciona los registros de nombreCol con x mediante la relacion R. x puede ser tanto un numero como otro expr('nombreCol2').
---------------------------------------------------------------------------------------------------------------------------------------------------------

Microsoft Windows [VersiÃ³n 10.0.19044.1706]
(c) Microsoft Corporation. Todos los derechos reservados.

C:\Users\unai.iparraguirre>spark-shell
22/06/07 17:05:35 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
Spark context Web UI available at http://L2205005.mshome.net:4040
Spark context available as 'sc' (master = local[*], app id = local-1654614344408).
Spark session available as 'spark'.
Welcome to
      ____              __
     / __/__  ___ _____/ /__
    _\ \/ _ \/ _ `/ __/  '_/
   /___/ .__/\_,_/_/ /_/\_\   version 3.0.3
      /_/

Using Scala version 2.12.10 (Java HotSpot(TM) 64-Bit Server VM, Java 1.8.0_331)
Type in expressions to have them evaluated.
Type :help for more information.

scala> 22/06/07 17:05:55 WARN ProcfsMetricsGetter: Exception when trying to compute pagesize, as a result reporting of ProcessTree metrics is stopped


scala> import org.apavhe.spark.sql.functions._
<console>:23: error: object apavhe is not a member of package org
       import org.apavhe.spark.sql.functions._
                  ^

scala> import org.apache.spark.sql.functions._
import org.apache.spark.sql.functions._

scala> import org.apache.spark.sql.SparkSession
import org.apache.spark.sql.SparkSession

scala> import org.apache.spark.sql.types._
import org.apache.spark.sql.types._                          ^

scala> blogsDF.select(expr("Hits * 2")).show(2)
+----------+
|(Hits * 2)|
+----------+
|      9070|
|     17816|
+----------+
only showing top 2 rows


scala> blogsDF.select(col("Hits")*2).show(2)
+----------+
|(Hits * 2)|
+----------+
|      9070|
|     17816|
+----------+
only showing top 2 rows


scala> blogsDF.select("Hits").show(2)
+----+
|Hits|
+----+
|4535|
|8908|
+----+
only showing top 2 rows


scala> blogsDF.select(col("Hits")).show(2)
+----+
|Hits|
+----+
|4535|
|8908|
+----+
only showing top 2 rows


scala> blogsDF.withColumn("Big Hitters", (expr("Hits > 10000"))).show()
+---+---------+-------+-----------------+---------+-----+---------+-----------+
| Id|    First|   Last|              Url|Published| Hits|Campaings|Big Hitters|
+---+---------+-------+-----------------+---------+-----+---------+-----------+
|  1|    Jules|  Damji|https://tinyurl.1| 1/4/2016| 4535|     null|      false|
|  2|   Brooke|  Wenig|https://tinyurl.2| 5/5/2018| 8908|     null|      false|
|  3|    Denny|    Lee|https://tinyurl.3| 6/7/2019| 7659|     null|      false|
|  4|Tathagata|    Das|https://tinyurl.4|5/12/2018|10568|     null|       true|
|  5|    Matei|Zaharia|https://tinyurl.5|5/14/2014|40578|     null|       true|
|  6|  Reynold|    Xin|https://tinyurl.6| 3/2/2015|25568|     null|       true|
+---+---------+-------+-----------------+---------+-----+---------+-----------+


scala> blogsDF.withColumn("Hits", (expr("Hits > 10000"))).show()
+---+---------+-------+-----------------+---------+-----+---------+
| Id|    First|   Last|              Url|Published| Hits|Campaings|
+---+---------+-------+-----------------+---------+-----+---------+
|  1|    Jules|  Damji|https://tinyurl.1| 1/4/2016|false|     null|
|  2|   Brooke|  Wenig|https://tinyurl.2| 5/5/2018|false|     null|
|  3|    Denny|    Lee|https://tinyurl.3| 6/7/2019|false|     null|
|  4|Tathagata|    Das|https://tinyurl.4|5/12/2018| true|     null|
|  5|    Matei|Zaharia|https://tinyurl.5|5/14/2014| true|     null|
|  6|  Reynold|    Xin|https://tinyurl.6| 3/2/2015| true|     null|
+---+---------+-------+-----------------+---------+-----+---------+


scala> blogsDF.withColumn("Hits", (expr("Hits"))).show()
+---+---------+-------+-----------------+---------+-----+---------+
| Id|    First|   Last|              Url|Published| Hits|Campaings|
+---+---------+-------+-----------------+---------+-----+---------+
|  1|    Jules|  Damji|https://tinyurl.1| 1/4/2016| 4535|     null|
|  2|   Brooke|  Wenig|https://tinyurl.2| 5/5/2018| 8908|     null|
|  3|    Denny|    Lee|https://tinyurl.3| 6/7/2019| 7659|     null|
|  4|Tathagata|    Das|https://tinyurl.4|5/12/2018|10568|     null|
|  5|    Matei|Zaharia|https://tinyurl.5|5/14/2014|40578|     null|
|  6|  Reynold|    Xin|https://tinyurl.6| 3/2/2015|25568|     null|
+---+---------+-------+-----------------+---------+-----+---------+


scala> blogsDF.withColumn("Hitsetox", (expr("Hits"))).show()
+---+---------+-------+-----------------+---------+-----+---------+--------+
| Id|    First|   Last|              Url|Published| Hits|Campaings|Hitsetox|
+---+---------+-------+-----------------+---------+-----+---------+--------+
|  1|    Jules|  Damji|https://tinyurl.1| 1/4/2016| 4535|     null|    4535|
|  2|   Brooke|  Wenig|https://tinyurl.2| 5/5/2018| 8908|     null|    8908|
|  3|    Denny|    Lee|https://tinyurl.3| 6/7/2019| 7659|     null|    7659|
|  4|Tathagata|    Das|https://tinyurl.4|5/12/2018|10568|     null|   10568|
|  5|    Matei|Zaharia|https://tinyurl.5|5/14/2014|40578|     null|   40578|
|  6|  Reynold|    Xin|https://tinyurl.6| 3/2/2015|25568|     null|   25568|
+---+---------+-------+-----------------+---------+-----+---------+--------+


scala> blogsDF.withColumn("Hitsetox", (expr("Hits *2 /3"))).show()
+---+---------+-------+-----------------+---------+-----+---------+------------------+
| Id|    First|   Last|              Url|Published| Hits|Campaings|          Hitsetox|
+---+---------+-------+-----------------+---------+-----+---------+------------------+
|  1|    Jules|  Damji|https://tinyurl.1| 1/4/2016| 4535|     null|3023.3333333333335|
|  2|   Brooke|  Wenig|https://tinyurl.2| 5/5/2018| 8908|     null| 5938.666666666667|
|  3|    Denny|    Lee|https://tinyurl.3| 6/7/2019| 7659|     null|            5106.0|
|  4|Tathagata|    Das|https://tinyurl.4|5/12/2018|10568|     null| 7045.333333333333|
|  5|    Matei|Zaharia|https://tinyurl.5|5/14/2014|40578|     null|           27052.0|
|  6|  Reynold|    Xin|https://tinyurl.6| 3/2/2015|25568|     null|17045.333333333332|
+---+---------+-------+-----------------+---------+-----+---------+------------------+



************************** Creamos una columna que concatene los datos introducidos y los muestra en una nueva clumna **********************
scala> blogsDF.withColumn("AuthorsId",(concat(expr("First"),expr("Last"),expr("Id")))).select(col("AuthorsId")).show(4)
+-------------+
|    AuthorsId|
+-------------+
|  JulesDamji1|
| BrookeWenig2|
|    DennyLee3|
|TathagataDas4|
+-------------+
only showing top 4 rows

scala> blogsDF.sort($"Id".desc).show()
+---+---------+-------+-----------------+---------+-----+---------+
| Id|    First|   Last|              Url|Published| Hits|Campaings|
+---+---------+-------+-----------------+---------+-----+---------+
|  6|  Reynold|    Xin|https://tinyurl.6| 3/2/2015|25568|     null|
|  5|    Matei|Zaharia|https://tinyurl.5|5/14/2014|40578|     null|
|  4|Tathagata|    Das|https://tinyurl.4|5/12/2018|10568|     null|
|  3|    Denny|    Lee|https://tinyurl.3| 6/7/2019| 7659|     null|
|  2|   Brooke|  Wenig|https://tinyurl.2| 5/5/2018| 8908|     null|
|  1|    Jules|  Damji|https://tinyurl.1| 1/4/2016| 4535|     null|
+---+---------+-------+-----------------+---------+-----+---------+

****************** Observar que col("Id") y $"Id" son equivalentes*****************

scala> blogsDF.sort(col("Id").desc).show()
+---+---------+-------+-----------------+---------+-----+---------+
| Id|    First|   Last|              Url|Published| Hits|Campaings|
+---+---------+-------+-----------------+---------+-----+---------+
|  6|  Reynold|    Xin|https://tinyurl.6| 3/2/2015|25568|     null|
|  5|    Matei|Zaharia|https://tinyurl.5|5/14/2014|40578|     null|
|  4|Tathagata|    Das|https://tinyurl.4|5/12/2018|10568|     null|
|  3|    Denny|    Lee|https://tinyurl.3| 6/7/2019| 7659|     null|
|  2|   Brooke|  Wenig|https://tinyurl.2| 5/5/2018| 8908|     null|
|  1|    Jules|  Damji|https://tinyurl.1| 1/4/2016| 4535|     null|
+---+---------+-------+-----------------+---------+-----+---------+
